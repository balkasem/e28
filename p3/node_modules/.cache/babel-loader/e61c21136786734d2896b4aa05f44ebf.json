{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/thread-loader/dist/cjs.js!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/babel-loader/lib/index.js!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/components/pages/AccountPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/src/components/pages/AccountPage.vue","mtime":1608082588537},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p3/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy9pbXBvcnQgeyBheGlvcyB9IGZyb20gJ0AvY29tbW9uL2FwcC5qcyc7CmltcG9ydCB7IGF4aW9zIH0gZnJvbSAiQC9hcHAuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IHsKICAgICAgICBlbWFpbDogJ2ppbGxAaGFydmFyZC5lZHUnLAogICAgICAgIHBhc3N3b3JkOiAnYXNkZmFzZGYnCiAgICAgIH0sCiAgICAgIGVycm9yczogbnVsbCwKICAgICAgdXNlclBvc3RzOiBudWxsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbG9naW46IGZ1bmN0aW9uIGxvZ2luKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdCgnbG9naW4nLCB0aGlzLmRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuYXV0aGVudGljYXRlZCkgewogICAgICAgICAgX3RoaXMuJHN0b3JlLmNvbW1pdCgnc2V0VXNlcicsIHJlc3BvbnNlLmRhdGEudXNlcik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzLmVycm9ycyA9IHJlc3BvbnNlLmRhdGEuZXJyb3JzOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdCgnbG9nb3V0JykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICBfdGhpczIuJHN0b3JlLmNvbW1pdCgnc2V0VXNlcicsIG51bGwpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgbG9hZFBvc3RzOiBmdW5jdGlvbiBsb2FkUG9zdHMoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudXNlcikgewogICAgICAgIHRoaXMudXNlclBvc3RzID0gW107IC8vY29uc29sZS5sb2codGhpcy51c2VyUG9zdHMpOwoKICAgICAgICBheGlvcy5nZXQoJ3Bvc3QnLCB7Ly9wYXJhbXM6IHsgdXNlcl9pZDogdGhpcy51c2VyLmlkIH0sCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIC8vIEl0ZXJhdGUgdGhyb3VnaCB0aGUgcG9zdHMgKHJlc3BvbnNlLmRhdGEucmVzdWx0cyksIGxvYWRpbmcgdGhlIHBvc3QgaW5mb3JtYXRpb24gZm9yIGVhY2ggcG9zdAogICAgICAgICAgX3RoaXMzLnVzZXJQb3N0cyA9IHJlc3BvbnNlLmRhdGEucG9zdC5tYXAoZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kc3RvcmUuZ2V0dGVycy5nZXRQb3N0cyhwb3N0LmlkKTsKICAgICAgICAgIH0pOyAvL2NvbnNvbGUubG9nKHRoaXMudXNlclBvc3RzKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8vIFdoZW4gdXNlciBjaGFuZ2VzLCB1cGRhdGUgcG9zdHMKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoKSB7CiAgICAgIHRoaXMubG9hZFBvc3RzKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5sb2FkUG9zdHMoKTsKICB9Cn07"},{"version":3,"sources":["AccountPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA,SAAA,KAAA,QAAA,UAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,KAAA,EAAA,kBADA;AAEA,QAAA,QAAA,EAAA;AAFA,OADA;AAKA,MAAA,MAAA,EAAA,IALA;AAMA,MAAA,SAAA,EAAA;AANA,KAAA;AAQA,GAVA;AAWA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AACA;AAHA,GAXA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,IAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,aAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,SAFA,MAEA;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,QAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA,OANA;AAOA,KATA;AAUA,IAAA,MAVA,oBAUA;AAAA;;AACA,MAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,IAAA;AACA;AACA,OAJA;AAKA,KAhBA;AAiBA,IAAA,SAjBA,uBAiBA;AAAA;;AACA,UAAA,KAAA,IAAA,EAAA;AACA,aAAA,SAAA,GAAA,EAAA,CADA,CAEA;;AACA,QAAA,KAAA,CACA,GADA,CACA,MADA,EACA,CACA;AADA,SADA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA;AACA,UAAA,MAAA,CAAA,SAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CACA,UAAA,IAAA,EAAA;AACA,mBAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,CACA,IAAA,CAAA,EADA,CAAA;AAGA,WALA,CAAA,CAFA,CASA;AACA,SAdA;AAeA;AACA;AArCA,GAhBA;AAuDA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,IAFA,kBAEA;AACA,WAAA,SAAA;AACA;AAJA,GAvDA;AA6DA,EAAA,OA7DA,qBA6DA;AACA,SAAA,SAAA;AACA;AA/DA,CAAA","sourcesContent":["<template>\n    <div id=\"account-page\">\n        <div v-if=\"user\">\n            <h2 data-test=\"welcome-message\" >Hi, {{ user.name }}!</h2>\n\n            <div id=\"posts\">\n                <strong>Your Posts</strong>\n                <p v-if=\"userPosts && userPosts.length == 0\">\n                    No Posts yet.\n                </p>\n                <li v-for=\"(post, key) in userPosts\" v-bind:key=\"key\">\n                    {{ post.title }}\n                </li>\n            </div>\n\n            <button @click=\"logout\" data-test=\"logout-button\" >Logout</button>\n        </div>\n\n        <div v-else id=\"loginForm\">\n            <h2>Login</h2>\n            <small\n                >(Form is prefilled for demonstration purposes; remove in final\n                application)</small\n            >\n            <div>\n                <label>Email: <input type=\"text\" v-model=\"data.email\" data-test=\"email-input\" /></label>\n            </div>\n            <div>\n                <label\n                    >Password: <input data-test=\"password-input\" type=\"password\" v-model=\"data.password\"\n                /></label>\n            </div>\n\n            <button @click=\"login\" data-test=\"login-button\" >Login</button>\n\n            <ul v-if=\"errors\">\n                <li class=\"error\" v-for=\"(error, index) in errors\" :key=\"index\">\n                    {{ error }}\n                </li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\n//import { axios } from '@/common/app.js';\nimport { axios } from \"@/app.js\";\n\nexport default {\n    data() {\n        return {\n            data: {\n                email: 'jill@harvard.edu',\n                password: 'asdfasdf',\n            },\n            errors: null,\n            userPosts: null,\n        };\n    },\n    computed: {\n        user() {\n            return this.$store.state.user;\n        },\n    },\n    methods: {\n        login() {\n            axios.post('login', this.data).then((response) => {\n                if (response.data.authenticated) {\n                    this.$store.commit('setUser', response.data.user);\n                } else {\n                    this.errors = response.data.errors;\n                }\n            });\n        },\n        logout() {\n            axios.post('logout').then((response) => {\n                if (response.data.success) {\n                    this.$store.commit('setUser', null);\n                }\n            });\n        },\n        loadPosts(){\n            if (this.user) {\n            this.userPosts = [];\n                //console.log(this.userPosts);\n                axios\n                    .get('post', {\n                        //params: { user_id: this.user.id },\n                    })\n                    .then((response) => {\n                        // Iterate through the posts (response.data.results), loading the post information for each post\n                        this.userPosts = response.data.post.map(\n                            (post) => {\n                                return this.$store.getters.getPosts(\n                                    post.id\n                                );\n                            }\n                        );\n                        //console.log(this.userPosts);\n                    });\n        }\n        }\n    },\n    watch: {\n        // When user changes, update posts\n        user() {\n                this.loadPosts();\n        },\n    },\n    mounted() {\n        this.loadPosts();\n    },\n};\n</script>"],"sourceRoot":"src/components/pages"}]}